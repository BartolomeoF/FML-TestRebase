####USE FOR MODEL_CHECKER

#### Give the model its name
model_name = 'generic'

#### Choose where to save the background and force quantity data
output_directory = '/home/duncan/Hi-COLA/HiCOLA/Output'

####################
# Dummy parameters #
####################
#The following parameters are dummy variables but are still required to be present
#in order for the model_checker to run.

K = 0
G3 = 0
G4 = 0.5

##################################################
# Fraction of cosmological constant in Omega_DE0 #
##################################################

f_phi = 1.0

#######################
# Initial conditions #
#######################
# Set the initial values of the scalar field, its derivative and the Hubble function.
# One of these may be ignored if you choose to apply the closure constraint on
# an "odeint" variable. You must still set a dummy value for this variable though.

# This is E_0
Hubble0 = 19001.70469

phiprime0 = 1e-5

phi0 = 1e-5

###############
# Mass ratios #
###############
# If True, all mass ratios are set to 1 and values below are ignored
set_all_to_one = True

M_pG4 = 1.
M_KG4 = 1.
M_G3s = 1.
M_sG4 = 1.
M_G3G4 = 1.
M_Ks = 1.
M_gp = 1.

#######################
# Closure declaration #
#######################
# Here you decide which variable is solved for via the Friedmann-like closure equation

# This indicates that the variable to be chosen is either the Hubble function, phi_prime, Omega_m or Omega_r
# If this is false, then one of the Horndeski model parameters will be solved through the closure equation instead
use_constraint_eq_on_odeint_variables = True

# This specifies which odeint variable
# 0 = Hubble function; 1 = phi; 2 = phiprime
which_odeint_par = 1

# Relies on the order in which the Horndeski parameters are written above
# Only relevant if use_constraint_eq_on_odeint_parameters is False.
# e.g. which_Horndeski_par = 1 means the 2nd parameter of your model will be solved
# for via closure
which_Horndeski_par = 0

# Closure guess value
# This sets the initial guess for the variable that will be numerically solved for through
# the closure equation. This implies that one of the floats supplied as an initial condition
# or as a parameter value will be ignored and the guess_value, and then the result of solving
# the closure equation will be used instead.
closure_guess_value = 1e-5
